{"version":3,"file":"Connection.js","sourceRoot":"","sources":["../src/Connection.ts"],"names":[],"mappings":";;;AAGA,uEAAoE;AAEpE,MAAa,UAAU;IAMnB;QAJA,WAAM,GAAuB,EAAE,CAAC;QAEzB,gBAAW,GAAsB,EAAE,CAAA;QAGtC,MAAM,kBAAkB,GAAG,IAAI,uCAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/D,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;IACxC,CAAC;IAED,IAAI,CAAC,IAAiC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAGD,OAAO,CAAC,GAAW;QACf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,IAAa,EAAE,MAAe;QAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,CAAC;CAEJ;AA7BD,gCA6BC","sourcesContent":["import { ClientRequestArgs } from \"http\";\n\nimport { ITransport, ITransportEventMap } from \"./transport/ITransport\";\nimport { WebSocketTransport } from \"./transport/WebSocketTransport\";\n\nexport class Connection implements ITransport {\n    transport: ITransport;\n    events: ITransportEventMap = {};\n\n    public httpOptions: ClientRequestArgs = {}\n\n    constructor() {\n        const webSocketTransport = new WebSocketTransport(this.events);\n        webSocketTransport.httpOptions = this.httpOptions;\n        this.transport = webSocketTransport;\n    }\n\n    send(data: ArrayBuffer | Array<number>): void {\n        this.transport.send(data);\n    }\n\n\n    connect(url: string): void {\n        this.transport.connect(url);\n    }\n\n    close(code?: number, reason?: string): void {\n        this.transport.close(code, reason);\n    }\n\n    get isOpen() {\n        return this.transport.isOpen;\n    }\n\n}\n"]}